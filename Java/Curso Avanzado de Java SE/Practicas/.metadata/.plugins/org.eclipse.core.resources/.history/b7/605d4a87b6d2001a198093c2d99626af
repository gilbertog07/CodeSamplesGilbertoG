package com.gilbertog.amazonviewer.model;

import java.util.ArrayList;
import java.util.Date;

import com.gilbertog.util.AmazonUtil;

public class Book extends Publication implements IVisualizable {

	private int id;
	private String isbn;
	private boolean readed;
	private int timeReaded;

	private ArrayList<Page> pages;
	
	
	public Book(String title, Date editionDate, String editorial, String[] authors, String isbn, ArrayList<Page> pages) {
		// TODO Auto-generated constructor stub
		super(title, editionDate, editorial, authors);
		this.isbn = isbn;
		this.pages = pages;
	}

	public int getId() {
		return id;
	}

	public String getIsbn() {
		return isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	public String isReaded() {

		String leido = "";
		
		if (readed == true) {
			leido = "Sí";
		} else {
			leido = "No";
		}
		
		return leido;
	}

	public void setReaded(boolean readed) {
		this.readed = readed;
	}

	public int getTimeReaded() {
		return timeReaded;
	}

	public void setTimeReaded(int timeReaded) {
		this.timeReaded = timeReaded;
	}

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		String data = " :: BOOKS :: "                       +
	                  "\nTitle: "        + getTitle()       +
	                  "\nEdition Date: " + getEditionDate() +
	                  "\nEditorial: "    + getEditorial()   +
	                  "\nISBN: "         + getIsbn()        +
	                  "\nAuthors: ";

		for(String author : getAuthors()) {
			data += "\n" + author;
		}

		return data;
	}

	@Override
	public Date startToSee(Date dateI) {
		// TODO Auto-generated method stub
		return dateI;
	}

	@Override
	public void stopToSee(Date dateI, Date dateF) {
		// TODO Auto-generated method stub

		if (dateF.getTime() > dateI.getTime()) {
			setTimeReaded((int) (dateF.getTime() - dateI.getTime()));
		} else {
			setTimeReaded(0);
		}
	}

	public void view() {

		setReaded(true);
		Date dateI = startToSee(new Date());

		int i = 0;
		do {
			
			System.out.println(".........");
			System.out.println("Pages " + getPages().get(i).getNumber());
			System.out.println(getPages().get(i).getContent());
			System.out.println(".........");

			if (i != 0) {
				System.out.println("1. Regresar Página");
			}
			
			System.out.println("2. Siguiente Página");
			System.out.println("0. Cerrar Libro");
			
			int response = AmazonUtil.validateUserResponseMenu(0, 2);
			
			if (response == 2) {
				i++;
			} else if (response == 1) {
				i--;
			} else if (response == 0) {
				break;
			}
			

		} while (i < getPages().size());

		// Cuando termine el libro
		stopToSee(dateI, new Date());
		System.out.println();
		System.out.println("Leíste: " + toString());
		System.out.println("Por: " + getTimeReaded() + " Milisegundos");

	}
	
	
	public static ArrayList<Book> makeBookList () {

		ArrayList<Book> books = new ArrayList<>();

		String author[] = new String[2];
		author[0] = "Autor 1";
		author[1] = "Autor 2";

		ArrayList<Page> pages = new ArrayList<>();
		
		for (int i = 1; i <= 5; i++) {
			books.add(new Book(("Libro " + i), new Date(), ("Editorial " + i), author, ("Isbn " + i), pages));
		}

		return books;

	}
	
	public ArrayList<Page> getPages() {
		return pages;
	}

	public void setPages(ArrayList<Page> pages) {
		this.pages = pages;
	}

	public static class Page {

		private int id;
		private int number;
		private String content;

		public Page(int number, String content) {
			super();
			this.number = number;
			this.content = content;
		}

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}

		public int getNumber() {
			return number;
		}

		public void setNumber(int number) {
			this.number = number;
		}

		public String getContent() {
			return content;
		}

		public void setContent(String content) {
			this.content = content;
		}

	}
	
}