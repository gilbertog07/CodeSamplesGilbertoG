package com.gilbertog.amazonviewer;

import java.util.ArrayList;

import java.util.Date;
import java.util.Scanner;

import com.gilbertog.amazonviewer.model.Book;
import com.gilbertog.amazonviewer.model.Chapter;
import com.gilbertog.amazonviewer.model.Movie;
import com.gilbertog.amazonviewer.model.Serie;
//import com.gilbertog.makereport.*;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/** Esta aplicacion es para ver películas, series, leer libros en la plataforma AmazonViewer */
		showMenu();

	}

	public static void showMenu() {
        int exit = 1;
        int opcion = 1;
        
        do {

        	System.out.println("");
        	System.out.println("BIENVENIDOS A AMAZON VIEWER");
            System.out.println();
            System.out.println("Selecciona el número de la opción deseada: ");
            System.out.println();
            System.out.println("1. Movies");
            System.out.println("2. Series");
            System.out.println("3. Books");
            System.out.println("4. Magazines");
            System.out.println("5. Report");
            System.out.println("6. Report Today");
            System.out.println("0. Exit");
            System.out.println();
            
            @SuppressWarnings("resource")
			Scanner sc = new Scanner(System.in);
            opcion = Integer.valueOf(sc.nextLine());

            switch (opcion) {
			case 1:
				System.out.println("Opción Movies");
				showMovie();
				break;
			case 2:
				System.out.println("Opción Series");
				showSeries();
				break;
			case 3:
				System.out.println("Opción Books");
				showBooks();
				break;
			case 4: 
				System.out.println("Opción Magazines");
				showMagazines();
				break;
			case 5: 
				System.out.println("Opción Report");
				makeReport();
				break;
			case 6: 
				System.out.println("Opción Report Today");
				makeReport(new Date());
				break;
			case 0: 
				System.out.println("Saliste del Sistema");
				exit = 0;
				break;
			default:
				System.out.println("Opción no valida");
			}

        } while(exit != 0);

	}

	static ArrayList<Movie> movies;
	public static void showMovie() {

		int exit = 1;
		movies = Movie.makeMoviesList(); // Se invocó de esta forma, ya que el método creado es Static, lo que permite NO tener que instanciar el objeto

		do {

			System.out.println();
			System.out.println(":: MOVIES ::");
			System.out.println();
			
			for (int i = 0; i < movies.size(); i++) {
				System.out.println((i+1) + " " + movies.get(i).getTitle() + " Visto: " + movies.get(i).isViewed());
			}

			System.out.println();
			System.out.println("0. Regresar al Menú");
			System.out.println();
			
			// Leer respuesta del usuario
			@SuppressWarnings("resource")
			Scanner sc = new Scanner(System.in);
			int opcion = Integer.valueOf(sc.nextLine());

			if (opcion == 0) {
				exit = 0;
			} else {
				Movie movieSelected = movies.get(opcion - 1);
				movieSelected.view();
			}

		} while(exit != 0);

	}

	public static void showSeries() {
		int exit = 1;
		ArrayList<Serie> series = Serie.makeSeriesList();
		
		do {
			System.out.println();
			System.out.println(":: SERIES ::");
			System.out.println();

		    for (int i = 0; i < series.size(); i++) {
				System.out.println((i+1) + " " + series.get(i).getTitle() + " Visto: " + series.get(i).isViewed());
			}

			System.out.println();
			System.out.println("0. Regresar al Menú");
			System.out.println();
		
			// Leer respuesta del usuario
			@SuppressWarnings("resource")
			Scanner sc = new Scanner(System.in);
			int opcion = Integer.valueOf(sc.nextLine());

			if (opcion == 0) {
				exit = 0;
			} else {
				showChapters(series.get(opcion - 1).getChapters());
			}

		} while(exit != 0);

	}
	
	public static void showChapters(ArrayList<Chapter> chapters) {
		int exit = 1;
		do {

			System.out.println();
			System.out.println(":: CHAPTERS ::");
			System.out.println();

		    for (int i = 0; i < chapters.size(); i++) {
				System.out.println((i+1) + " " + chapters.get(i).getTitle() + " Visto: " + chapters.get(i).isViewed());
			}

			System.out.println();
			System.out.println("0. Regresar al Menú");
			System.out.println();

			// Leer respuesta del usuario
			@SuppressWarnings("resource")
			Scanner sc = new Scanner(System.in);
			int opcion = Integer.valueOf(sc.nextLine());

			if (opcion == 0) {
				exit = 0;
			} else {
				Chapter chapterSelected = chapters.get(opcion - 1);
				chapterSelected.view();
				System.out.println();
			}

		} while(exit != 0);
	}
	
	public static void showBooks() {
		int exit = 1;
		ArrayList<Book> books = Book.makeBookList();

		do {
			System.out.println();
			System.out.println(":: BOOKS ::");
			System.out.println();

			for (int i = 0; i < books.size(); i++) {
				System.out.println((i+1) + " " + books.get(i).getTitle() + " Leido: " + books.get(i).isReaded());
			}

			System.out.println();
			System.out.println("0. Regresar al Menú");
			System.out.println();
			
			// Leer respuesta del usuario
			@SuppressWarnings("resource")
			Scanner sc = new Scanner(System.in);
			int opcion = Integer.valueOf(sc.nextLine());

			if (opcion == 0) {
				exit = 0;
			} else {
				Book booksSelected = books.get(opcion - 1);
				booksSelected.view();
			}

		} while(exit != 0);

	}
	
	public static void showMagazines() {
		int exit = 0;
		do {
			System.out.println();
			System.out.println(":: MAGAZINES ::");
			System.out.println();
		} while(exit != 0);
	}

	public static void makeReport() {
		/*
		 * Report report = new Report(); report.setNamefile("reporte");
		 * report.setTitle(":: VISTOS ::"); report.setExtension("txt"); String
		 * contentReport = "";
		 * 
		 * for (Movie movie : movies) { if (movie.getIsViewed()) { contentReport +=
		 * movie.toString() + "\n"; } }
		 * 
		 * report.setContent(contentReport); report.makeReport();
		 */
	}
	
	public static void makeReport(Date date) {
		/*
		 * SimpleDateFormat df = new SimpleDateFormat("yyyy-mm-dd"); String dateString =
		 * df.format(date);
		 * 
		 * Report report = new Report(); report.setNamefile("reporte " + dateString);
		 * report.setTitle(":: VISTOS ::"); report.setExtension("txt"); String
		 * contentReport = "";
		 * 
		 * for (Movie movie : movies) { if (movie.getIsViewed()) { contentReport +=
		 * movie.toString() + "\n"; } }
		 * 
		 * report.setContent(contentReport); report.makeReport();
		 */	
	}	
	
}